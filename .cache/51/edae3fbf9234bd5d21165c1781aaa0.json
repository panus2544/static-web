{"id":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","dependencies":[{"name":"/home/devop054/static-web/package.json","includedInParent":true,"mtime":1616524749706},{"name":"/home/devop054/static-web/.browserslistrc","includedInParent":true,"mtime":1616523492655},{"name":"/home/devop054/static-web/node_modules/tsparticles/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vector = void 0;\nclass Vector {\n    constructor(x, y) {\n        let defX, defY;\n        if (y === undefined) {\n            if (typeof x === \"number\") {\n                throw new Error(\"tsParticles - Vector not initialized correctly\");\n            }\n            const coords = x;\n            [defX, defY] = [coords.x, coords.y];\n        }\n        else {\n            [defX, defY] = [x, y];\n        }\n        this.x = defX;\n        this.y = defY;\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    getLengthSq() {\n        return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    setTo(velocity) {\n        this.x = velocity.x;\n        this.y = velocity.y;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\nexports.Vector = Vector;\nVector.origin = Vector.create(0, 0);\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/tsparticles/dist/Core/Particle/Vector.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}}],"sources":{"../node_modules/tsparticles/dist/Core/Particle/Vector.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vector = void 0;\nclass Vector {\n    constructor(x, y) {\n        let defX, defY;\n        if (y === undefined) {\n            if (typeof x === \"number\") {\n                throw new Error(\"tsParticles - Vector not initialized correctly\");\n            }\n            const coords = x;\n            [defX, defY] = [coords.x, coords.y];\n        }\n        else {\n            [defX, defY] = [x, y];\n        }\n        this.x = defX;\n        this.y = defY;\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    getLengthSq() {\n        return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    setTo(velocity) {\n        this.x = velocity.x;\n        this.y = velocity.y;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\nexports.Vector = Vector;\nVector.origin = Vector.create(0, 0);\n"},"lineCount":95}},"error":null,"hash":"68aee426db6474b372cb668486ccc28a","cacheData":{"env":{}}}