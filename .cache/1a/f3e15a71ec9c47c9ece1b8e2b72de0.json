{"id":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","dependencies":[{"name":"/home/devop054/static-web/package.json","includedInParent":true,"mtime":1616524749706},{"name":"/home/devop054/static-web/.browserslistrc","includedInParent":true,"mtime":1616523492655},{"name":"/home/devop054/static-web/node_modules/tsparticles/package.json","includedInParent":true,"mtime":499162500000},{"name":"../../Utils","loc":{"line":4,"column":24},"parent":"/home/devop054/static-web/node_modules/tsparticles/dist/Interactions/Particles/Linker.js","resolved":"/home/devop054/static-web/node_modules/tsparticles/dist/Utils/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Linker = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass Linker {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled(particle) {\n        return particle.options.links.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        var _a;\n        const container = this.container;\n        const linkOpt1 = p1.options.links;\n        const optOpacity = linkOpt1.opacity;\n        const optDistance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const canvasSize = container.canvas.size;\n        const warp = linkOpt1.warp;\n        const pos1 = p1.getPosition();\n        const range = warp\n            ? new Utils_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Utils_1.Circle(pos1.x, pos1.y, optDistance);\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            let distance = Utils_1.NumberUtils.getDistance(pos1, pos2);\n            if (warp) {\n                if (distance > optDistance) {\n                    const pos2NE = {\n                        x: pos2.x - canvasSize.width,\n                        y: pos2.y,\n                    };\n                    distance = Utils_1.NumberUtils.getDistance(pos1, pos2NE);\n                    if (distance > optDistance) {\n                        const pos2SE = {\n                            x: pos2.x - canvasSize.width,\n                            y: pos2.y - canvasSize.height,\n                        };\n                        distance = Utils_1.NumberUtils.getDistance(pos1, pos2SE);\n                        if (distance > optDistance) {\n                            const pos2SW = {\n                                x: pos2.x,\n                                y: pos2.y - canvasSize.height,\n                            };\n                            distance = Utils_1.NumberUtils.getDistance(pos1, pos2SW);\n                        }\n                    }\n                }\n            }\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            const linksOptions = p1.options.links;\n            let linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            if (!linkColor) {\n                const optColor = linksOptions.color;\n                linkColor = Utils_1.ColorUtils.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n                if (linksOptions.id !== undefined) {\n                    container.particles.linksColors.set(linksOptions.id, linkColor);\n                }\n                else {\n                    container.particles.linksColor = linkColor;\n                }\n            }\n            if (p2.links.map((t) => t.destination).indexOf(p1) === -1 &&\n                p1.links.map((t) => t.destination).indexOf(p2) === -1) {\n                p1.links.push({\n                    destination: p2,\n                    opacity: opacityLine,\n                });\n            }\n        }\n    }\n}\nexports.Linker = Linker;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}}],"sources":{"../node_modules/tsparticles/dist/Interactions/Particles/Linker.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Linker = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass Linker {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled(particle) {\n        return particle.options.links.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        var _a;\n        const container = this.container;\n        const linkOpt1 = p1.options.links;\n        const optOpacity = linkOpt1.opacity;\n        const optDistance = (_a = p1.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const canvasSize = container.canvas.size;\n        const warp = linkOpt1.warp;\n        const pos1 = p1.getPosition();\n        const range = warp\n            ? new Utils_1.CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Utils_1.Circle(pos1.x, pos1.y, optDistance);\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            let distance = Utils_1.NumberUtils.getDistance(pos1, pos2);\n            if (warp) {\n                if (distance > optDistance) {\n                    const pos2NE = {\n                        x: pos2.x - canvasSize.width,\n                        y: pos2.y,\n                    };\n                    distance = Utils_1.NumberUtils.getDistance(pos1, pos2NE);\n                    if (distance > optDistance) {\n                        const pos2SE = {\n                            x: pos2.x - canvasSize.width,\n                            y: pos2.y - canvasSize.height,\n                        };\n                        distance = Utils_1.NumberUtils.getDistance(pos1, pos2SE);\n                        if (distance > optDistance) {\n                            const pos2SW = {\n                                x: pos2.x,\n                                y: pos2.y - canvasSize.height,\n                            };\n                            distance = Utils_1.NumberUtils.getDistance(pos1, pos2SW);\n                        }\n                    }\n                }\n            }\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            const linksOptions = p1.options.links;\n            let linkColor = linksOptions.id !== undefined\n                ? container.particles.linksColors.get(linksOptions.id)\n                : container.particles.linksColor;\n            if (!linkColor) {\n                const optColor = linksOptions.color;\n                linkColor = Utils_1.ColorUtils.getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n                if (linksOptions.id !== undefined) {\n                    container.particles.linksColors.set(linksOptions.id, linkColor);\n                }\n                else {\n                    container.particles.linksColor = linkColor;\n                }\n            }\n            if (p2.links.map((t) => t.destination).indexOf(p1) === -1 &&\n                p1.links.map((t) => t.destination).indexOf(p2) === -1) {\n                p1.links.push({\n                    destination: p2,\n                    opacity: opacityLine,\n                });\n            }\n        }\n    }\n}\nexports.Linker = Linker;\n"},"lineCount":86}},"error":null,"hash":"201f3f3646b9b08c34058e14c34c2256","cacheData":{"env":{}}}