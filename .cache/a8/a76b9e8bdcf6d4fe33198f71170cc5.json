{"id":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","dependencies":[{"name":"/home/devop054/static-web/package.json","includedInParent":true,"mtime":1616524749706},{"name":"/home/devop054/static-web/.browserslistrc","includedInParent":true,"mtime":1616523492655},{"name":"/home/devop054/static-web/node_modules/tsparticles/package.json","includedInParent":true,"mtime":499162500000},{"name":"./Enums","loc":{"line":13,"column":24},"parent":"/home/devop054/static-web/node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","resolved":"/home/devop054/static-web/node_modules/tsparticles/dist/Plugins/PolygonMask/Enums/index.js"},{"name":"../../Utils","loc":{"line":14,"column":24},"parent":"/home/devop054/static-web/node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","resolved":"/home/devop054/static-web/node_modules/tsparticles/dist/Utils/index.js"},{"name":"./Options/Classes/PolygonMask","loc":{"line":15,"column":30},"parent":"/home/devop054/static-web/node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","resolved":"/home/devop054/static-web/node_modules/tsparticles/dist/Plugins/PolygonMask/Options/Classes/PolygonMask.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonMaskInstance = void 0;\nconst Enums_1 = require(\"./Enums\");\nconst Utils_1 = require(\"../../Utils\");\nconst PolygonMask_1 = require(\"./Options/Classes/PolygonMask\");\nfunction polygonBounce(particle) {\n    particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n    particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n}\nfunction drawPolygonMask(context, rawData, stroke) {\n    const color = Utils_1.ColorUtils.colorToRgb(stroke.color);\n    if (!color) {\n        return;\n    }\n    context.beginPath();\n    context.moveTo(rawData[0].x, rawData[0].y);\n    for (const item of rawData) {\n        context.lineTo(item.x, item.y);\n    }\n    context.closePath();\n    context.strokeStyle = Utils_1.ColorUtils.getStyleFromRgb(color);\n    context.lineWidth = stroke.width;\n    context.stroke();\n}\nfunction drawPolygonMaskPath(context, path, stroke, position) {\n    context.translate(position.x, position.y);\n    const color = Utils_1.ColorUtils.colorToRgb(stroke.color);\n    if (!color) {\n        return;\n    }\n    context.strokeStyle = Utils_1.ColorUtils.getStyleFromRgb(color, stroke.opacity);\n    context.lineWidth = stroke.width;\n    context.stroke(path);\n}\nfunction parsePaths(paths, scale, offset) {\n    const res = [];\n    for (const path of paths) {\n        const segments = path.element.pathSegList;\n        const len = segments.numberOfItems;\n        const p = {\n            x: 0,\n            y: 0,\n        };\n        for (let i = 0; i < len; i++) {\n            const segment = segments.getItem(i);\n            const svgPathSeg = window.SVGPathSeg;\n            switch (segment.pathSegType) {\n                case svgPathSeg.PATHSEG_MOVETO_ABS:\n                case svgPathSeg.PATHSEG_LINETO_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                case svgPathSeg.PATHSEG_ARC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: {\n                    const absSeg = segment;\n                    p.x = absSeg.x;\n                    p.y = absSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                    p.x = segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                    p.y = segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_REL:\n                case svgPathSeg.PATHSEG_MOVETO_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                case svgPathSeg.PATHSEG_ARC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: {\n                    const relSeg = segment;\n                    p.x += relSeg.x;\n                    p.y += relSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                    p.x += segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                    p.y += segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_UNKNOWN:\n                case svgPathSeg.PATHSEG_CLOSEPATH:\n                    continue;\n            }\n            res.push({\n                x: p.x * scale + offset.x,\n                y: p.y * scale + offset.y,\n            });\n        }\n    }\n    return res;\n}\nclass PolygonMaskInstance {\n    constructor(container) {\n        this.container = container;\n        this.dimension = {\n            height: 0,\n            width: 0,\n        };\n        this.path2DSupported = !!window.Path2D;\n        this.options = new PolygonMask_1.PolygonMask();\n        this.polygonMaskMoveRadius = this.options.move.radius * container.retina.pixelRatio;\n    }\n    initAsync(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.options.load(options === null || options === void 0 ? void 0 : options.polygon);\n            const polygonMaskOptions = this.options;\n            this.polygonMaskMoveRadius = polygonMaskOptions.move.radius * this.container.retina.pixelRatio;\n            if (polygonMaskOptions.enable) {\n                yield this.initRawData();\n            }\n        });\n    }\n    resize() {\n        const container = this.container;\n        const options = this.options;\n        if (!(options.enable && options.type !== Enums_1.Type.none)) {\n            return;\n        }\n        if (this.redrawTimeout) {\n            clearTimeout(this.redrawTimeout);\n        }\n        this.redrawTimeout = window.setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.initRawData(true);\n            container.particles.redraw();\n        }), 250);\n    }\n    stop() {\n        delete this.raw;\n        delete this.paths;\n    }\n    particlesInitialization() {\n        const options = this.options;\n        if (options.enable &&\n            options.type === Enums_1.Type.inline &&\n            (options.inline.arrangement === Enums_1.InlineArrangement.onePerPoint ||\n                options.inline.arrangement === Enums_1.InlineArrangement.perPoint)) {\n            this.drawPoints();\n            return true;\n        }\n        return false;\n    }\n    particlePosition(position) {\n        var _a, _b;\n        const options = this.options;\n        if (!(options.enable && ((_b = (_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0)) {\n            return;\n        }\n        return Utils_1.Utils.deepExtend({}, position ? position : this.randomPoint());\n    }\n    particleBounce(particle) {\n        const options = this.options;\n        if (options.enable && options.type !== Enums_1.Type.none && options.type !== Enums_1.Type.inline) {\n            if (!this.checkInsidePolygon(particle.getPosition())) {\n                polygonBounce(particle);\n                return true;\n            }\n        }\n        else if (options.enable && options.type === Enums_1.Type.inline && particle.initialPosition) {\n            const dist = Utils_1.NumberUtils.getDistance(particle.initialPosition, particle.getPosition());\n            if (dist > this.polygonMaskMoveRadius) {\n                polygonBounce(particle);\n                return true;\n            }\n        }\n        return false;\n    }\n    clickPositionValid(position) {\n        const options = this.options;\n        return (options.enable &&\n            options.type !== Enums_1.Type.none &&\n            options.type !== Enums_1.Type.inline &&\n            this.checkInsidePolygon(position));\n    }\n    draw(context) {\n        var _a;\n        if (!((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        const options = this.options;\n        const polygonDraw = options.draw;\n        if (!(options.enable && polygonDraw.enable)) {\n            return;\n        }\n        const rawData = this.raw;\n        for (const path of this.paths) {\n            const path2d = path.path2d;\n            const path2dSupported = this.path2DSupported;\n            if (!context) {\n                continue;\n            }\n            if (path2dSupported && path2d && this.offset) {\n                drawPolygonMaskPath(context, path2d, polygonDraw.stroke, this.offset);\n            }\n            else if (rawData) {\n                drawPolygonMask(context, rawData, polygonDraw.stroke);\n            }\n        }\n    }\n    checkInsidePolygon(position) {\n        var _a, _b;\n        const container = this.container;\n        const options = this.options;\n        if (!options.enable || options.type === Enums_1.Type.none || options.type === Enums_1.Type.inline) {\n            return true;\n        }\n        if (!this.raw) {\n            throw new Error(Utils_1.Constants.noPolygonFound);\n        }\n        const canvasSize = container.canvas.size;\n        const x = (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * canvasSize.width;\n        const y = (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * canvasSize.height;\n        let inside = false;\n        for (let i = 0, j = this.raw.length - 1; i < this.raw.length; j = i++) {\n            const pi = this.raw[i];\n            const pj = this.raw[j];\n            const intersect = pi.y > y !== pj.y > y && x < ((pj.x - pi.x) * (y - pi.y)) / (pj.y - pi.y) + pi.x;\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n        return options.type === Enums_1.Type.inside ? inside : options.type === Enums_1.Type.outside ? !inside : false;\n    }\n    parseSvgPath(xml, force) {\n        var _a, _b, _c;\n        const forceDownload = force !== null && force !== void 0 ? force : false;\n        if (this.paths !== undefined && !forceDownload) {\n            return this.raw;\n        }\n        const container = this.container;\n        const options = this.options;\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(xml, \"image/svg+xml\");\n        const svg = doc.getElementsByTagName(\"svg\")[0];\n        let svgPaths = svg.getElementsByTagName(\"path\");\n        if (!svgPaths.length) {\n            svgPaths = doc.getElementsByTagName(\"path\");\n        }\n        this.paths = [];\n        for (let i = 0; i < svgPaths.length; i++) {\n            const path = svgPaths.item(i);\n            if (path) {\n                this.paths.push({\n                    element: path,\n                    length: path.getTotalLength(),\n                });\n            }\n        }\n        const pxRatio = container.retina.pixelRatio;\n        const scale = options.scale / pxRatio;\n        this.dimension.width = parseFloat((_a = svg.getAttribute(\"width\")) !== null && _a !== void 0 ? _a : \"0\") * scale;\n        this.dimension.height = parseFloat((_b = svg.getAttribute(\"height\")) !== null && _b !== void 0 ? _b : \"0\") * scale;\n        const position = (_c = options.position) !== null && _c !== void 0 ? _c : {\n            x: 50,\n            y: 50,\n        };\n        this.offset = {\n            x: (container.canvas.size.width * position.x) / (100 * pxRatio) - this.dimension.width / 2,\n            y: (container.canvas.size.height * position.y) / (100 * pxRatio) - this.dimension.height / 2,\n        };\n        return parsePaths(this.paths, scale, this.offset);\n    }\n    downloadSvgPath(svgUrl, force) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = this.options;\n            const url = svgUrl || options.url;\n            const forceDownload = force !== null && force !== void 0 ? force : false;\n            if (!url || (this.paths !== undefined && !forceDownload)) {\n                return this.raw;\n            }\n            const req = yield fetch(url);\n            if (!req.ok) {\n                throw new Error(\"tsParticles Error - Error occurred during polygon mask download\");\n            }\n            return this.parseSvgPath(yield req.text(), force);\n        });\n    }\n    drawPoints() {\n        if (!this.raw) {\n            return;\n        }\n        for (const item of this.raw) {\n            this.container.particles.addParticle({\n                x: item.x,\n                y: item.y,\n            });\n        }\n    }\n    randomPoint() {\n        const container = this.container;\n        const options = this.options;\n        let position;\n        if (options.type === Enums_1.Type.inline) {\n            switch (options.inline.arrangement) {\n                case Enums_1.InlineArrangement.randomPoint:\n                    position = this.getRandomPoint();\n                    break;\n                case Enums_1.InlineArrangement.randomLength:\n                    position = this.getRandomPointByLength();\n                    break;\n                case Enums_1.InlineArrangement.equidistant:\n                    position = this.getEquidistantPointByIndex(container.particles.count);\n                    break;\n                case Enums_1.InlineArrangement.onePerPoint:\n                case Enums_1.InlineArrangement.perPoint:\n                default:\n                    position = this.getPointByIndex(container.particles.count);\n            }\n        }\n        else {\n            position = {\n                x: Math.random() * container.canvas.size.width,\n                y: Math.random() * container.canvas.size.height,\n            };\n        }\n        if (this.checkInsidePolygon(position)) {\n            return position;\n        }\n        else {\n            return this.randomPoint();\n        }\n    }\n    getRandomPoint() {\n        if (!this.raw || !this.raw.length) {\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        }\n        const coords = Utils_1.Utils.itemFromArray(this.raw);\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    }\n    getRandomPointByLength() {\n        var _a, _b, _c;\n        const options = this.options;\n        if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        }\n        const path = Utils_1.Utils.itemFromArray(this.paths);\n        const distance = Math.floor(Math.random() * path.length) + 1;\n        const point = path.element.getPointAtLength(distance);\n        return {\n            x: point.x * options.scale + (((_b = this.offset) === null || _b === void 0 ? void 0 : _b.x) || 0),\n            y: point.y * options.scale + (((_c = this.offset) === null || _c === void 0 ? void 0 : _c.y) || 0),\n        };\n    }\n    getEquidistantPointByIndex(index) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const options = this.container.actualOptions;\n        const polygonMaskOptions = this.options;\n        if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length))\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        let offset = 0;\n        let point;\n        const totalLength = this.paths.reduce((tot, path) => tot + path.length, 0);\n        const distance = totalLength / options.particles.number.value;\n        for (const path of this.paths) {\n            const pathDistance = distance * index - offset;\n            if (pathDistance <= path.length) {\n                point = path.element.getPointAtLength(pathDistance);\n                break;\n            }\n            else {\n                offset += path.length;\n            }\n        }\n        return {\n            x: ((_b = point === null || point === void 0 ? void 0 : point.x) !== null && _b !== void 0 ? _b : 0) * polygonMaskOptions.scale + ((_d = (_c = this.offset) === null || _c === void 0 ? void 0 : _c.x) !== null && _d !== void 0 ? _d : 0),\n            y: ((_e = point === null || point === void 0 ? void 0 : point.y) !== null && _e !== void 0 ? _e : 0) * polygonMaskOptions.scale + ((_g = (_f = this.offset) === null || _f === void 0 ? void 0 : _f.y) !== null && _g !== void 0 ? _g : 0),\n        };\n    }\n    getPointByIndex(index) {\n        if (!this.raw || !this.raw.length) {\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        }\n        const coords = this.raw[index % this.raw.length];\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    }\n    createPath2D() {\n        var _a, _b;\n        const options = this.options;\n        if (!this.path2DSupported || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        for (const path of this.paths) {\n            const pathData = (_b = path.element) === null || _b === void 0 ? void 0 : _b.getAttribute(\"d\");\n            if (pathData) {\n                const path2d = new Path2D(pathData);\n                const matrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix();\n                const finalPath = new Path2D();\n                const transform = matrix.scale(options.scale);\n                if (finalPath.addPath) {\n                    finalPath.addPath(path2d, transform);\n                    path.path2d = finalPath;\n                }\n                else {\n                    delete path.path2d;\n                }\n            }\n            else {\n                delete path.path2d;\n            }\n            if (path.path2d || !this.raw) {\n                continue;\n            }\n            path.path2d = new Path2D();\n            path.path2d.moveTo(this.raw[0].x, this.raw[0].y);\n            this.raw.forEach((pos, i) => {\n                var _a;\n                if (i > 0) {\n                    (_a = path.path2d) === null || _a === void 0 ? void 0 : _a.lineTo(pos.x, pos.y);\n                }\n            });\n            path.path2d.closePath();\n        }\n    }\n    initRawData(force) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = this.options;\n            if (options.url) {\n                this.raw = yield this.downloadSvgPath(options.url, force);\n            }\n            else if (options.data) {\n                const data = options.data;\n                let svg;\n                if (typeof data !== \"string\") {\n                    const path = data.path instanceof Array\n                        ? data.path.map((t) => `<path d=\"${t}\" />`).join(\"\")\n                        : `<path d=\"${data.path}\" />`;\n                    const namespaces = 'xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n                    svg = `<svg ${namespaces} width=\"${data.size.width}\" height=\"${data.size.height}\">${path}</svg>`;\n                }\n                else {\n                    svg = data;\n                }\n                this.raw = this.parseSvgPath(svg, force);\n            }\n            this.createPath2D();\n        });\n    }\n}\nexports.PolygonMaskInstance = PolygonMaskInstance;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}}],"sources":{"../node_modules/tsparticles/dist/Plugins/PolygonMask/PolygonMaskInstance.js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PolygonMaskInstance = void 0;\nconst Enums_1 = require(\"./Enums\");\nconst Utils_1 = require(\"../../Utils\");\nconst PolygonMask_1 = require(\"./Options/Classes/PolygonMask\");\nfunction polygonBounce(particle) {\n    particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n    particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n}\nfunction drawPolygonMask(context, rawData, stroke) {\n    const color = Utils_1.ColorUtils.colorToRgb(stroke.color);\n    if (!color) {\n        return;\n    }\n    context.beginPath();\n    context.moveTo(rawData[0].x, rawData[0].y);\n    for (const item of rawData) {\n        context.lineTo(item.x, item.y);\n    }\n    context.closePath();\n    context.strokeStyle = Utils_1.ColorUtils.getStyleFromRgb(color);\n    context.lineWidth = stroke.width;\n    context.stroke();\n}\nfunction drawPolygonMaskPath(context, path, stroke, position) {\n    context.translate(position.x, position.y);\n    const color = Utils_1.ColorUtils.colorToRgb(stroke.color);\n    if (!color) {\n        return;\n    }\n    context.strokeStyle = Utils_1.ColorUtils.getStyleFromRgb(color, stroke.opacity);\n    context.lineWidth = stroke.width;\n    context.stroke(path);\n}\nfunction parsePaths(paths, scale, offset) {\n    const res = [];\n    for (const path of paths) {\n        const segments = path.element.pathSegList;\n        const len = segments.numberOfItems;\n        const p = {\n            x: 0,\n            y: 0,\n        };\n        for (let i = 0; i < len; i++) {\n            const segment = segments.getItem(i);\n            const svgPathSeg = window.SVGPathSeg;\n            switch (segment.pathSegType) {\n                case svgPathSeg.PATHSEG_MOVETO_ABS:\n                case svgPathSeg.PATHSEG_LINETO_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                case svgPathSeg.PATHSEG_ARC_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS: {\n                    const absSeg = segment;\n                    p.x = absSeg.x;\n                    p.y = absSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                    p.x = segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                    p.y = segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_REL:\n                case svgPathSeg.PATHSEG_MOVETO_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                case svgPathSeg.PATHSEG_ARC_REL:\n                case svgPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                case svgPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL: {\n                    const relSeg = segment;\n                    p.x += relSeg.x;\n                    p.y += relSeg.y;\n                    break;\n                }\n                case svgPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                    p.x += segment.x;\n                    break;\n                case svgPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                    p.y += segment.y;\n                    break;\n                case svgPathSeg.PATHSEG_UNKNOWN:\n                case svgPathSeg.PATHSEG_CLOSEPATH:\n                    continue;\n            }\n            res.push({\n                x: p.x * scale + offset.x,\n                y: p.y * scale + offset.y,\n            });\n        }\n    }\n    return res;\n}\nclass PolygonMaskInstance {\n    constructor(container) {\n        this.container = container;\n        this.dimension = {\n            height: 0,\n            width: 0,\n        };\n        this.path2DSupported = !!window.Path2D;\n        this.options = new PolygonMask_1.PolygonMask();\n        this.polygonMaskMoveRadius = this.options.move.radius * container.retina.pixelRatio;\n    }\n    initAsync(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.options.load(options === null || options === void 0 ? void 0 : options.polygon);\n            const polygonMaskOptions = this.options;\n            this.polygonMaskMoveRadius = polygonMaskOptions.move.radius * this.container.retina.pixelRatio;\n            if (polygonMaskOptions.enable) {\n                yield this.initRawData();\n            }\n        });\n    }\n    resize() {\n        const container = this.container;\n        const options = this.options;\n        if (!(options.enable && options.type !== Enums_1.Type.none)) {\n            return;\n        }\n        if (this.redrawTimeout) {\n            clearTimeout(this.redrawTimeout);\n        }\n        this.redrawTimeout = window.setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.initRawData(true);\n            container.particles.redraw();\n        }), 250);\n    }\n    stop() {\n        delete this.raw;\n        delete this.paths;\n    }\n    particlesInitialization() {\n        const options = this.options;\n        if (options.enable &&\n            options.type === Enums_1.Type.inline &&\n            (options.inline.arrangement === Enums_1.InlineArrangement.onePerPoint ||\n                options.inline.arrangement === Enums_1.InlineArrangement.perPoint)) {\n            this.drawPoints();\n            return true;\n        }\n        return false;\n    }\n    particlePosition(position) {\n        var _a, _b;\n        const options = this.options;\n        if (!(options.enable && ((_b = (_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0) > 0)) {\n            return;\n        }\n        return Utils_1.Utils.deepExtend({}, position ? position : this.randomPoint());\n    }\n    particleBounce(particle) {\n        const options = this.options;\n        if (options.enable && options.type !== Enums_1.Type.none && options.type !== Enums_1.Type.inline) {\n            if (!this.checkInsidePolygon(particle.getPosition())) {\n                polygonBounce(particle);\n                return true;\n            }\n        }\n        else if (options.enable && options.type === Enums_1.Type.inline && particle.initialPosition) {\n            const dist = Utils_1.NumberUtils.getDistance(particle.initialPosition, particle.getPosition());\n            if (dist > this.polygonMaskMoveRadius) {\n                polygonBounce(particle);\n                return true;\n            }\n        }\n        return false;\n    }\n    clickPositionValid(position) {\n        const options = this.options;\n        return (options.enable &&\n            options.type !== Enums_1.Type.none &&\n            options.type !== Enums_1.Type.inline &&\n            this.checkInsidePolygon(position));\n    }\n    draw(context) {\n        var _a;\n        if (!((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        const options = this.options;\n        const polygonDraw = options.draw;\n        if (!(options.enable && polygonDraw.enable)) {\n            return;\n        }\n        const rawData = this.raw;\n        for (const path of this.paths) {\n            const path2d = path.path2d;\n            const path2dSupported = this.path2DSupported;\n            if (!context) {\n                continue;\n            }\n            if (path2dSupported && path2d && this.offset) {\n                drawPolygonMaskPath(context, path2d, polygonDraw.stroke, this.offset);\n            }\n            else if (rawData) {\n                drawPolygonMask(context, rawData, polygonDraw.stroke);\n            }\n        }\n    }\n    checkInsidePolygon(position) {\n        var _a, _b;\n        const container = this.container;\n        const options = this.options;\n        if (!options.enable || options.type === Enums_1.Type.none || options.type === Enums_1.Type.inline) {\n            return true;\n        }\n        if (!this.raw) {\n            throw new Error(Utils_1.Constants.noPolygonFound);\n        }\n        const canvasSize = container.canvas.size;\n        const x = (_a = position === null || position === void 0 ? void 0 : position.x) !== null && _a !== void 0 ? _a : Math.random() * canvasSize.width;\n        const y = (_b = position === null || position === void 0 ? void 0 : position.y) !== null && _b !== void 0 ? _b : Math.random() * canvasSize.height;\n        let inside = false;\n        for (let i = 0, j = this.raw.length - 1; i < this.raw.length; j = i++) {\n            const pi = this.raw[i];\n            const pj = this.raw[j];\n            const intersect = pi.y > y !== pj.y > y && x < ((pj.x - pi.x) * (y - pi.y)) / (pj.y - pi.y) + pi.x;\n            if (intersect) {\n                inside = !inside;\n            }\n        }\n        return options.type === Enums_1.Type.inside ? inside : options.type === Enums_1.Type.outside ? !inside : false;\n    }\n    parseSvgPath(xml, force) {\n        var _a, _b, _c;\n        const forceDownload = force !== null && force !== void 0 ? force : false;\n        if (this.paths !== undefined && !forceDownload) {\n            return this.raw;\n        }\n        const container = this.container;\n        const options = this.options;\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(xml, \"image/svg+xml\");\n        const svg = doc.getElementsByTagName(\"svg\")[0];\n        let svgPaths = svg.getElementsByTagName(\"path\");\n        if (!svgPaths.length) {\n            svgPaths = doc.getElementsByTagName(\"path\");\n        }\n        this.paths = [];\n        for (let i = 0; i < svgPaths.length; i++) {\n            const path = svgPaths.item(i);\n            if (path) {\n                this.paths.push({\n                    element: path,\n                    length: path.getTotalLength(),\n                });\n            }\n        }\n        const pxRatio = container.retina.pixelRatio;\n        const scale = options.scale / pxRatio;\n        this.dimension.width = parseFloat((_a = svg.getAttribute(\"width\")) !== null && _a !== void 0 ? _a : \"0\") * scale;\n        this.dimension.height = parseFloat((_b = svg.getAttribute(\"height\")) !== null && _b !== void 0 ? _b : \"0\") * scale;\n        const position = (_c = options.position) !== null && _c !== void 0 ? _c : {\n            x: 50,\n            y: 50,\n        };\n        this.offset = {\n            x: (container.canvas.size.width * position.x) / (100 * pxRatio) - this.dimension.width / 2,\n            y: (container.canvas.size.height * position.y) / (100 * pxRatio) - this.dimension.height / 2,\n        };\n        return parsePaths(this.paths, scale, this.offset);\n    }\n    downloadSvgPath(svgUrl, force) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = this.options;\n            const url = svgUrl || options.url;\n            const forceDownload = force !== null && force !== void 0 ? force : false;\n            if (!url || (this.paths !== undefined && !forceDownload)) {\n                return this.raw;\n            }\n            const req = yield fetch(url);\n            if (!req.ok) {\n                throw new Error(\"tsParticles Error - Error occurred during polygon mask download\");\n            }\n            return this.parseSvgPath(yield req.text(), force);\n        });\n    }\n    drawPoints() {\n        if (!this.raw) {\n            return;\n        }\n        for (const item of this.raw) {\n            this.container.particles.addParticle({\n                x: item.x,\n                y: item.y,\n            });\n        }\n    }\n    randomPoint() {\n        const container = this.container;\n        const options = this.options;\n        let position;\n        if (options.type === Enums_1.Type.inline) {\n            switch (options.inline.arrangement) {\n                case Enums_1.InlineArrangement.randomPoint:\n                    position = this.getRandomPoint();\n                    break;\n                case Enums_1.InlineArrangement.randomLength:\n                    position = this.getRandomPointByLength();\n                    break;\n                case Enums_1.InlineArrangement.equidistant:\n                    position = this.getEquidistantPointByIndex(container.particles.count);\n                    break;\n                case Enums_1.InlineArrangement.onePerPoint:\n                case Enums_1.InlineArrangement.perPoint:\n                default:\n                    position = this.getPointByIndex(container.particles.count);\n            }\n        }\n        else {\n            position = {\n                x: Math.random() * container.canvas.size.width,\n                y: Math.random() * container.canvas.size.height,\n            };\n        }\n        if (this.checkInsidePolygon(position)) {\n            return position;\n        }\n        else {\n            return this.randomPoint();\n        }\n    }\n    getRandomPoint() {\n        if (!this.raw || !this.raw.length) {\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        }\n        const coords = Utils_1.Utils.itemFromArray(this.raw);\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    }\n    getRandomPointByLength() {\n        var _a, _b, _c;\n        const options = this.options;\n        if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        }\n        const path = Utils_1.Utils.itemFromArray(this.paths);\n        const distance = Math.floor(Math.random() * path.length) + 1;\n        const point = path.element.getPointAtLength(distance);\n        return {\n            x: point.x * options.scale + (((_b = this.offset) === null || _b === void 0 ? void 0 : _b.x) || 0),\n            y: point.y * options.scale + (((_c = this.offset) === null || _c === void 0 ? void 0 : _c.y) || 0),\n        };\n    }\n    getEquidistantPointByIndex(index) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const options = this.container.actualOptions;\n        const polygonMaskOptions = this.options;\n        if (!this.raw || !this.raw.length || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length))\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        let offset = 0;\n        let point;\n        const totalLength = this.paths.reduce((tot, path) => tot + path.length, 0);\n        const distance = totalLength / options.particles.number.value;\n        for (const path of this.paths) {\n            const pathDistance = distance * index - offset;\n            if (pathDistance <= path.length) {\n                point = path.element.getPointAtLength(pathDistance);\n                break;\n            }\n            else {\n                offset += path.length;\n            }\n        }\n        return {\n            x: ((_b = point === null || point === void 0 ? void 0 : point.x) !== null && _b !== void 0 ? _b : 0) * polygonMaskOptions.scale + ((_d = (_c = this.offset) === null || _c === void 0 ? void 0 : _c.x) !== null && _d !== void 0 ? _d : 0),\n            y: ((_e = point === null || point === void 0 ? void 0 : point.y) !== null && _e !== void 0 ? _e : 0) * polygonMaskOptions.scale + ((_g = (_f = this.offset) === null || _f === void 0 ? void 0 : _f.y) !== null && _g !== void 0 ? _g : 0),\n        };\n    }\n    getPointByIndex(index) {\n        if (!this.raw || !this.raw.length) {\n            throw new Error(Utils_1.Constants.noPolygonDataLoaded);\n        }\n        const coords = this.raw[index % this.raw.length];\n        return {\n            x: coords.x,\n            y: coords.y,\n        };\n    }\n    createPath2D() {\n        var _a, _b;\n        const options = this.options;\n        if (!this.path2DSupported || !((_a = this.paths) === null || _a === void 0 ? void 0 : _a.length)) {\n            return;\n        }\n        for (const path of this.paths) {\n            const pathData = (_b = path.element) === null || _b === void 0 ? void 0 : _b.getAttribute(\"d\");\n            if (pathData) {\n                const path2d = new Path2D(pathData);\n                const matrix = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\").createSVGMatrix();\n                const finalPath = new Path2D();\n                const transform = matrix.scale(options.scale);\n                if (finalPath.addPath) {\n                    finalPath.addPath(path2d, transform);\n                    path.path2d = finalPath;\n                }\n                else {\n                    delete path.path2d;\n                }\n            }\n            else {\n                delete path.path2d;\n            }\n            if (path.path2d || !this.raw) {\n                continue;\n            }\n            path.path2d = new Path2D();\n            path.path2d.moveTo(this.raw[0].x, this.raw[0].y);\n            this.raw.forEach((pos, i) => {\n                var _a;\n                if (i > 0) {\n                    (_a = path.path2d) === null || _a === void 0 ? void 0 : _a.lineTo(pos.x, pos.y);\n                }\n            });\n            path.path2d.closePath();\n        }\n    }\n    initRawData(force) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = this.options;\n            if (options.url) {\n                this.raw = yield this.downloadSvgPath(options.url, force);\n            }\n            else if (options.data) {\n                const data = options.data;\n                let svg;\n                if (typeof data !== \"string\") {\n                    const path = data.path instanceof Array\n                        ? data.path.map((t) => `<path d=\"${t}\" />`).join(\"\")\n                        : `<path d=\"${data.path}\" />`;\n                    const namespaces = 'xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"';\n                    svg = `<svg ${namespaces} width=\"${data.size.width}\" height=\"${data.size.height}\">${path}</svg>`;\n                }\n                else {\n                    svg = data;\n                }\n                this.raw = this.parseSvgPath(svg, force);\n            }\n            this.createPath2D();\n        });\n    }\n}\nexports.PolygonMaskInstance = PolygonMaskInstance;\n"},"lineCount":459}},"error":null,"hash":"917f3f6306352dfa1dba580abc863a2f","cacheData":{"env":{}}}