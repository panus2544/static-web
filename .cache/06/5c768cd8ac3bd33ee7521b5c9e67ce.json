{"id":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","dependencies":[{"name":"/home/devop054/static-web/package.json","includedInParent":true,"mtime":1616524749706},{"name":"/home/devop054/static-web/.browserslistrc","includedInParent":true,"mtime":1616523492655},{"name":"/home/devop054/static-web/node_modules/tsparticles/package.json","includedInParent":true,"mtime":499162500000},{"name":"../Enums/Directions","loc":{"line":4,"column":29},"parent":"/home/devop054/static-web/node_modules/tsparticles/dist/Utils/NumberUtils.js","resolved":"/home/devop054/static-web/node_modules/tsparticles/dist/Enums/Directions/index.js"},{"name":"../Core/Particle/Vector","loc":{"line":5,"column":25},"parent":"/home/devop054/static-web/node_modules/tsparticles/dist/Utils/NumberUtils.js","resolved":"/home/devop054/static-web/node_modules/tsparticles/dist/Core/Particle/Vector.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberUtils = void 0;\nconst Directions_1 = require(\"../Enums/Directions\");\nconst Vector_1 = require(\"../Core/Particle/Vector\");\nclass NumberUtils {\n    static clamp(num, min, max) {\n        return Math.min(Math.max(num, min), max);\n    }\n    static mix(comp1, comp2, weight1, weight2) {\n        return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n    }\n    static randomInRange(r) {\n        const max = NumberUtils.getRangeMax(r);\n        let min = NumberUtils.getRangeMin(r);\n        if (max === min) {\n            min = 0;\n        }\n        return Math.random() * (max - min) + min;\n    }\n    static getRangeValue(value) {\n        return typeof value === \"number\" ? value : NumberUtils.randomInRange(value);\n    }\n    static getRangeMin(value) {\n        return typeof value === \"number\" ? value : value.min;\n    }\n    static getRangeMax(value) {\n        return typeof value === \"number\" ? value : value.max;\n    }\n    static setRangeValue(source, value) {\n        if (source === value || (value === undefined && typeof source === \"number\")) {\n            return source;\n        }\n        const min = NumberUtils.getRangeMin(source), max = NumberUtils.getRangeMax(source);\n        return value !== undefined\n            ? {\n                min: Math.min(min, value),\n                max: Math.max(max, value),\n            }\n            : NumberUtils.setRangeValue(min, max);\n    }\n    static getValue(options) {\n        const random = options.random;\n        const { enable, minimumValue } = typeof random === \"boolean\" ? { enable: random, minimumValue: 0 } : random;\n        return enable\n            ? NumberUtils.getRangeValue(NumberUtils.setRangeValue(options.value, minimumValue))\n            : NumberUtils.getRangeValue(options.value);\n    }\n    static getDistances(pointA, pointB) {\n        const dx = pointA.x - pointB.x;\n        const dy = pointA.y - pointB.y;\n        return { dx: dx, dy: dy, distance: Math.sqrt(dx * dx + dy * dy) };\n    }\n    static getDistance(pointA, pointB) {\n        return NumberUtils.getDistances(pointA, pointB).distance;\n    }\n    static getParticleBaseVelocity(direction) {\n        const baseVelocity = Vector_1.Vector.origin;\n        baseVelocity.length = 1;\n        switch (direction) {\n            case Directions_1.MoveDirection.top:\n                baseVelocity.angle = -Math.PI / 2;\n                break;\n            case Directions_1.MoveDirection.topRight:\n                baseVelocity.angle = -Math.PI / 4;\n                break;\n            case Directions_1.MoveDirection.right:\n                baseVelocity.angle = 0;\n                break;\n            case Directions_1.MoveDirection.bottomRight:\n                baseVelocity.angle = Math.PI / 4;\n                break;\n            case Directions_1.MoveDirection.bottom:\n                baseVelocity.angle = Math.PI / 2;\n                break;\n            case Directions_1.MoveDirection.bottomLeft:\n                baseVelocity.angle = (3 * Math.PI) / 4;\n                break;\n            case Directions_1.MoveDirection.left:\n                baseVelocity.angle = Math.PI;\n                break;\n            case Directions_1.MoveDirection.topLeft:\n                baseVelocity.angle = (-3 * Math.PI) / 4;\n                break;\n            case Directions_1.MoveDirection.none:\n            default:\n                baseVelocity.angle = Math.random() * Math.PI * 2;\n                break;\n        }\n        return baseVelocity;\n    }\n    static rotateVelocity(velocity, angle) {\n        return {\n            horizontal: velocity.horizontal * Math.cos(angle) - velocity.vertical * Math.sin(angle),\n            vertical: velocity.horizontal * Math.sin(angle) + velocity.vertical * Math.cos(angle),\n        };\n    }\n    static collisionVelocity(v1, v2, m1, m2) {\n        return Vector_1.Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n    }\n}\nexports.NumberUtils = NumberUtils;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/NumberUtils.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}}],"sources":{"../node_modules/tsparticles/dist/Utils/NumberUtils.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NumberUtils = void 0;\nconst Directions_1 = require(\"../Enums/Directions\");\nconst Vector_1 = require(\"../Core/Particle/Vector\");\nclass NumberUtils {\n    static clamp(num, min, max) {\n        return Math.min(Math.max(num, min), max);\n    }\n    static mix(comp1, comp2, weight1, weight2) {\n        return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n    }\n    static randomInRange(r) {\n        const max = NumberUtils.getRangeMax(r);\n        let min = NumberUtils.getRangeMin(r);\n        if (max === min) {\n            min = 0;\n        }\n        return Math.random() * (max - min) + min;\n    }\n    static getRangeValue(value) {\n        return typeof value === \"number\" ? value : NumberUtils.randomInRange(value);\n    }\n    static getRangeMin(value) {\n        return typeof value === \"number\" ? value : value.min;\n    }\n    static getRangeMax(value) {\n        return typeof value === \"number\" ? value : value.max;\n    }\n    static setRangeValue(source, value) {\n        if (source === value || (value === undefined && typeof source === \"number\")) {\n            return source;\n        }\n        const min = NumberUtils.getRangeMin(source), max = NumberUtils.getRangeMax(source);\n        return value !== undefined\n            ? {\n                min: Math.min(min, value),\n                max: Math.max(max, value),\n            }\n            : NumberUtils.setRangeValue(min, max);\n    }\n    static getValue(options) {\n        const random = options.random;\n        const { enable, minimumValue } = typeof random === \"boolean\" ? { enable: random, minimumValue: 0 } : random;\n        return enable\n            ? NumberUtils.getRangeValue(NumberUtils.setRangeValue(options.value, minimumValue))\n            : NumberUtils.getRangeValue(options.value);\n    }\n    static getDistances(pointA, pointB) {\n        const dx = pointA.x - pointB.x;\n        const dy = pointA.y - pointB.y;\n        return { dx: dx, dy: dy, distance: Math.sqrt(dx * dx + dy * dy) };\n    }\n    static getDistance(pointA, pointB) {\n        return NumberUtils.getDistances(pointA, pointB).distance;\n    }\n    static getParticleBaseVelocity(direction) {\n        const baseVelocity = Vector_1.Vector.origin;\n        baseVelocity.length = 1;\n        switch (direction) {\n            case Directions_1.MoveDirection.top:\n                baseVelocity.angle = -Math.PI / 2;\n                break;\n            case Directions_1.MoveDirection.topRight:\n                baseVelocity.angle = -Math.PI / 4;\n                break;\n            case Directions_1.MoveDirection.right:\n                baseVelocity.angle = 0;\n                break;\n            case Directions_1.MoveDirection.bottomRight:\n                baseVelocity.angle = Math.PI / 4;\n                break;\n            case Directions_1.MoveDirection.bottom:\n                baseVelocity.angle = Math.PI / 2;\n                break;\n            case Directions_1.MoveDirection.bottomLeft:\n                baseVelocity.angle = (3 * Math.PI) / 4;\n                break;\n            case Directions_1.MoveDirection.left:\n                baseVelocity.angle = Math.PI;\n                break;\n            case Directions_1.MoveDirection.topLeft:\n                baseVelocity.angle = (-3 * Math.PI) / 4;\n                break;\n            case Directions_1.MoveDirection.none:\n            default:\n                baseVelocity.angle = Math.random() * Math.PI * 2;\n                break;\n        }\n        return baseVelocity;\n    }\n    static rotateVelocity(velocity, angle) {\n        return {\n            horizontal: velocity.horizontal * Math.cos(angle) - velocity.vertical * Math.sin(angle),\n            vertical: velocity.horizontal * Math.sin(angle) + velocity.vertical * Math.cos(angle),\n        };\n    }\n    static collisionVelocity(v1, v2, m1, m2) {\n        return Vector_1.Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n    }\n}\nexports.NumberUtils = NumberUtils;\n"},"lineCount":103}},"error":null,"hash":"d9493376f63588f37b7a50c86c621de4","cacheData":{"env":{}}}