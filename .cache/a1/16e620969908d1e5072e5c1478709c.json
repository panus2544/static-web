{"id":"../node_modules/tsparticles/dist/Utils/QuadTree.js","dependencies":[{"name":"/home/devop054/static-web/package.json","includedInParent":true,"mtime":1616524749706},{"name":"/home/devop054/static-web/.browserslistrc","includedInParent":true,"mtime":1616523492655},{"name":"/home/devop054/static-web/node_modules/tsparticles/package.json","includedInParent":true,"mtime":499162500000},{"name":"./Rectangle","loc":{"line":4,"column":28},"parent":"/home/devop054/static-web/node_modules/tsparticles/dist/Utils/QuadTree.js","resolved":"/home/devop054/static-web/node_modules/tsparticles/dist/Utils/Rectangle.js"},{"name":"./Circle","loc":{"line":5,"column":25},"parent":"/home/devop054/static-web/node_modules/tsparticles/dist/Utils/QuadTree.js","resolved":"/home/devop054/static-web/node_modules/tsparticles/dist/Utils/Circle.js"},{"name":"./CircleWarp","loc":{"line":6,"column":29},"parent":"/home/devop054/static-web/node_modules/tsparticles/dist/Utils/QuadTree.js","resolved":"/home/devop054/static-web/node_modules/tsparticles/dist/Utils/CircleWarp.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QuadTree = void 0;\nconst Rectangle_1 = require(\"./Rectangle\");\nconst Circle_1 = require(\"./Circle\");\nconst CircleWarp_1 = require(\"./CircleWarp\");\nclass QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n    }\n    subdivide() {\n        const x = this.rectangle.position.x;\n        const y = this.rectangle.position.y;\n        const w = this.rectangle.size.width;\n        const h = this.rectangle.size.height;\n        const capacity = this.capacity;\n        this.northEast = new QuadTree(new Rectangle_1.Rectangle(x, y, w / 2, h / 2), capacity);\n        this.northWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this.southEast = new QuadTree(new Rectangle_1.Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this.southWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this.divided = true;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this.points.length < this.capacity) {\n            this.points.push(point);\n            return true;\n        }\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    queryCircle(position, radius) {\n        return this.query(new Circle_1.Circle(position.x, position.y, radius));\n    }\n    queryCircleWarp(position, radius, containerOrSize) {\n        const container = containerOrSize;\n        const size = containerOrSize;\n        return this.query(new CircleWarp_1.CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n    queryRectangle(position, size) {\n        return this.query(new Rectangle_1.Rectangle(position.x, position.y, size.width, size.height));\n    }\n    query(range, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        else {\n            for (const p of this.points) {\n                if (!range.contains(p.position)) {\n                    continue;\n                }\n                res.push(p.particle);\n            }\n            if (this.divided) {\n                (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n                (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n                (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n                (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n            }\n        }\n        return res;\n    }\n}\nexports.QuadTree = QuadTree;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/tsparticles/dist/Utils/QuadTree.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}}],"sources":{"../node_modules/tsparticles/dist/Utils/QuadTree.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.QuadTree = void 0;\nconst Rectangle_1 = require(\"./Rectangle\");\nconst Circle_1 = require(\"./Circle\");\nconst CircleWarp_1 = require(\"./CircleWarp\");\nclass QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n    }\n    subdivide() {\n        const x = this.rectangle.position.x;\n        const y = this.rectangle.position.y;\n        const w = this.rectangle.size.width;\n        const h = this.rectangle.size.height;\n        const capacity = this.capacity;\n        this.northEast = new QuadTree(new Rectangle_1.Rectangle(x, y, w / 2, h / 2), capacity);\n        this.northWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this.southEast = new QuadTree(new Rectangle_1.Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this.southWest = new QuadTree(new Rectangle_1.Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this.divided = true;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this.points.length < this.capacity) {\n            this.points.push(point);\n            return true;\n        }\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    queryCircle(position, radius) {\n        return this.query(new Circle_1.Circle(position.x, position.y, radius));\n    }\n    queryCircleWarp(position, radius, containerOrSize) {\n        const container = containerOrSize;\n        const size = containerOrSize;\n        return this.query(new CircleWarp_1.CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n    queryRectangle(position, size) {\n        return this.query(new Rectangle_1.Rectangle(position.x, position.y, size.width, size.height));\n    }\n    query(range, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        else {\n            for (const p of this.points) {\n                if (!range.contains(p.position)) {\n                    continue;\n                }\n                res.push(p.particle);\n            }\n            if (this.divided) {\n                (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n                (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n                (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n                (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n            }\n        }\n        return res;\n    }\n}\nexports.QuadTree = QuadTree;\n"},"lineCount":78}},"error":null,"hash":"a6993a2429fc11a50b95aba480c5f724","cacheData":{"env":{}}}