{"id":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","dependencies":[{"name":"/home/devop054/static-web/package.json","includedInParent":true,"mtime":1616524749706},{"name":"/home/devop054/static-web/.browserslistrc","includedInParent":true,"mtime":1616523492655},{"name":"/home/devop054/static-web/node_modules/tsparticles/package.json","includedInParent":true,"mtime":499162500000},{"name":"../../Enums","loc":{"line":4,"column":24},"parent":"/home/devop054/static-web/node_modules/tsparticles/dist/Interactions/Particles/Collider.js","resolved":"/home/devop054/static-web/node_modules/tsparticles/dist/Enums/index.js"},{"name":"../../Utils","loc":{"line":5,"column":24},"parent":"/home/devop054/static-web/node_modules/tsparticles/dist/Interactions/Particles/Collider.js","resolved":"/home/devop054/static-web/node_modules/tsparticles/dist/Utils/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collider = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nfunction bounce(p1, p2) {\n    Utils_1.Utils.circleBounce(Utils_1.Utils.circleBounceDataFromParticle(p1), Utils_1.Utils.circleBounceDataFromParticle(p2));\n}\nfunction destroy(p1, p2) {\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n            p2.destroy();\n        }\n        else {\n            p1.destroy();\n        }\n    }\n}\nclass Collider {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        const container = this.container;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.queryCircle(pos1, p1.getRadius() * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const dist = Utils_1.NumberUtils.getDistance(pos1, pos2);\n            const radius1 = p1.getRadius();\n            const radius2 = p2.getRadius();\n            const distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.options.collisions.mode) {\n            case Enums_1.CollisionMode.absorb: {\n                this.absorb(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.bounce: {\n                bounce(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.destroy: {\n                destroy(p1, p2);\n                break;\n            }\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container;\n        const fps = container.actualOptions.fpsLimit / 1000;\n        if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n            p2.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n            if (p1.getRadius() >= p2.getRadius()) {\n                const factor = Utils_1.NumberUtils.clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.getRadius() <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = Utils_1.NumberUtils.clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.getRadius() <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\nexports.Collider = Collider;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}}],"sources":{"../node_modules/tsparticles/dist/Interactions/Particles/Collider.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collider = void 0;\nconst Enums_1 = require(\"../../Enums\");\nconst Utils_1 = require(\"../../Utils\");\nfunction bounce(p1, p2) {\n    Utils_1.Utils.circleBounce(Utils_1.Utils.circleBounceDataFromParticle(p1), Utils_1.Utils.circleBounceDataFromParticle(p2));\n}\nfunction destroy(p1, p2) {\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        if (p1.getRadius() >= p2.getRadius()) {\n            p2.destroy();\n        }\n        else {\n            p1.destroy();\n        }\n    }\n}\nclass Collider {\n    constructor(container) {\n        this.container = container;\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n    interact(p1) {\n        const container = this.container;\n        const pos1 = p1.getPosition();\n        const query = container.particles.quadTree.queryCircle(pos1, p1.getRadius() * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            const dist = Utils_1.NumberUtils.getDistance(pos1, pos2);\n            const radius1 = p1.getRadius();\n            const radius2 = p2.getRadius();\n            const distP = radius1 + radius2;\n            if (dist <= distP) {\n                this.resolveCollision(p1, p2);\n            }\n        }\n    }\n    resolveCollision(p1, p2) {\n        switch (p1.options.collisions.mode) {\n            case Enums_1.CollisionMode.absorb: {\n                this.absorb(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.bounce: {\n                bounce(p1, p2);\n                break;\n            }\n            case Enums_1.CollisionMode.destroy: {\n                destroy(p1, p2);\n                break;\n            }\n        }\n    }\n    absorb(p1, p2) {\n        const container = this.container;\n        const fps = container.actualOptions.fpsLimit / 1000;\n        if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n            p1.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n            p2.destroy();\n        }\n        else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n            if (p1.getRadius() >= p2.getRadius()) {\n                const factor = Utils_1.NumberUtils.clamp(p1.getRadius() / p2.getRadius(), 0, p2.getRadius()) * fps;\n                p1.size.value += factor;\n                p2.size.value -= factor;\n                if (p2.getRadius() <= container.retina.pixelRatio) {\n                    p2.size.value = 0;\n                    p2.destroy();\n                }\n            }\n            else {\n                const factor = Utils_1.NumberUtils.clamp(p2.getRadius() / p1.getRadius(), 0, p1.getRadius()) * fps;\n                p1.size.value -= factor;\n                p2.size.value += factor;\n                if (p1.getRadius() <= container.retina.pixelRatio) {\n                    p1.size.value = 0;\n                    p1.destroy();\n                }\n            }\n        }\n    }\n}\nexports.Collider = Collider;\n"},"lineCount":104}},"error":null,"hash":"5c2fdb7f08a4ea0f8705597af0d876b1","cacheData":{"env":{}}}